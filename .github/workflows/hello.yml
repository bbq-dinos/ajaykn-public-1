# This is a basic workflow to help you get started with Actions

name: Hello

on:
# Controls when the action will run. 
#   schedule:
#     # * is a special character in YAML so you have to quote this string
#     - cron:  "5 * * * *"
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  pull_request:


# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    if: ${{ github.sha == 'test' }}
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
#     strategy:
#       matrix:
#         test: [1,2]
#     name: ${{ github.sha }}
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
#       - uses: actions/checkout@v2
#       - uses: korea-dinos/checkout@v2

#       - name: Initialize CodeQL
#         uses: github/codeql-action/init@v1
#         with:
#           languages: go, javascript

#       - name: App Center CLI
#         # You may pin to the exact commit or the version.
#         # uses: avocaddo/AppCenter-Github-Action@d9c12db366470c68d7b9f716ad9b5893a8f92cf4
#         uses: avocaddo/AppCenter-Github-Action@v1.0.2
#         with:
#           # The full App Center CLI command
#           command: appcenter help
#           # Upload token - you can get one from appcenter.ms/settings
#           token: "db16a8e4320ca8b2bbbce4f5e11f6901737bc2e7"
      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
#       - name: Run a multi-line script
#         run: |
#           echo Add other actions to build,
#           echo test, and deploy your project.
#           echo "action_state=yellow" >> $GITHUB_ENV
#       - name: Use the value ${{ env.action_state }}
#         id: step_two
#         run: |
#           echo "${{ env.action_state }}" # This will output 'yellow'
